/*
* generated by Xtext
*/
package org.xtext.unq.planificador.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class PdmGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cProfesorsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cProfesorsProfesorParserRuleCall_0_0 = (RuleCall)cProfesorsAssignment_0.eContents().get(0);
		private final Assignment cHorasAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cHorasHoraParserRuleCall_1_0 = (RuleCall)cHorasAssignment_1.eContents().get(0);
		private final Assignment cMateriasAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMateriasMateriaParserRuleCall_2_0 = (RuleCall)cMateriasAssignment_2.eContents().get(0);
		private final Assignment cAulasAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAulasAulaParserRuleCall_3_0 = (RuleCall)cAulasAssignment_3.eContents().get(0);
		private final Assignment cCargasHorariasAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCargasHorariasCargaHorariaParserRuleCall_4_0 = (RuleCall)cCargasHorariasAssignment_4.eContents().get(0);
		private final Assignment cCargasHorariasDocentesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cCargasHorariasDocentesCargaHorariaDocenteParserRuleCall_5_0 = (RuleCall)cCargasHorariasDocentesAssignment_5.eContents().get(0);
		private final Assignment cHorariosAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cHorariosHorariosParserRuleCall_6_0 = (RuleCall)cHorariosAssignment_6.eContents().get(0);
		private final Assignment cDiasAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDiasDiaParserRuleCall_7_0 = (RuleCall)cDiasAssignment_7.eContents().get(0);
		private final Assignment cSemestreAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cSemestreSemestreParserRuleCall_8_0 = (RuleCall)cSemestreAssignment_8.eContents().get(0);
		private final Assignment cPlanificacionesAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cPlanificacionesPlanificacionParserRuleCall_9_0 = (RuleCall)cPlanificacionesAssignment_9.eContents().get(0);
		private final Assignment cHorariosAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cHorariosHorarioParserRuleCall_10_0 = (RuleCall)cHorariosAssignment_10.eContents().get(0);
		
		//Model:
		//	profesors+=Profesor* horas+=Hora* materias+=Materia* aulas+=Aula* cargasHorarias+=CargaHoraria*
		//	cargasHorariasDocentes+=CargaHorariaDocente* horarios+=Horarios* dias+=Dia* semestre+=Semestre*
		//	planificaciones+=Planificacion* horarios+=Horario*;
		public ParserRule getRule() { return rule; }

		//profesors+=Profesor* horas+=Hora* materias+=Materia* aulas+=Aula* cargasHorarias+=CargaHoraria*
		//cargasHorariasDocentes+=CargaHorariaDocente* horarios+=Horarios* dias+=Dia* semestre+=Semestre*
		//planificaciones+=Planificacion* horarios+=Horario*
		public Group getGroup() { return cGroup; }

		//profesors+=Profesor*
		public Assignment getProfesorsAssignment_0() { return cProfesorsAssignment_0; }

		//Profesor
		public RuleCall getProfesorsProfesorParserRuleCall_0_0() { return cProfesorsProfesorParserRuleCall_0_0; }

		//horas+=Hora*
		public Assignment getHorasAssignment_1() { return cHorasAssignment_1; }

		//Hora
		public RuleCall getHorasHoraParserRuleCall_1_0() { return cHorasHoraParserRuleCall_1_0; }

		//materias+=Materia*
		public Assignment getMateriasAssignment_2() { return cMateriasAssignment_2; }

		//Materia
		public RuleCall getMateriasMateriaParserRuleCall_2_0() { return cMateriasMateriaParserRuleCall_2_0; }

		//aulas+=Aula*
		public Assignment getAulasAssignment_3() { return cAulasAssignment_3; }

		//Aula
		public RuleCall getAulasAulaParserRuleCall_3_0() { return cAulasAulaParserRuleCall_3_0; }

		//cargasHorarias+=CargaHoraria*
		public Assignment getCargasHorariasAssignment_4() { return cCargasHorariasAssignment_4; }

		//CargaHoraria
		public RuleCall getCargasHorariasCargaHorariaParserRuleCall_4_0() { return cCargasHorariasCargaHorariaParserRuleCall_4_0; }

		//cargasHorariasDocentes+=CargaHorariaDocente*
		public Assignment getCargasHorariasDocentesAssignment_5() { return cCargasHorariasDocentesAssignment_5; }

		//CargaHorariaDocente
		public RuleCall getCargasHorariasDocentesCargaHorariaDocenteParserRuleCall_5_0() { return cCargasHorariasDocentesCargaHorariaDocenteParserRuleCall_5_0; }

		//horarios+=Horarios*
		public Assignment getHorariosAssignment_6() { return cHorariosAssignment_6; }

		//Horarios
		public RuleCall getHorariosHorariosParserRuleCall_6_0() { return cHorariosHorariosParserRuleCall_6_0; }

		//dias+=Dia*
		public Assignment getDiasAssignment_7() { return cDiasAssignment_7; }

		//Dia
		public RuleCall getDiasDiaParserRuleCall_7_0() { return cDiasDiaParserRuleCall_7_0; }

		//semestre+=Semestre*
		public Assignment getSemestreAssignment_8() { return cSemestreAssignment_8; }

		//Semestre
		public RuleCall getSemestreSemestreParserRuleCall_8_0() { return cSemestreSemestreParserRuleCall_8_0; }

		//planificaciones+=Planificacion*
		public Assignment getPlanificacionesAssignment_9() { return cPlanificacionesAssignment_9; }

		//Planificacion
		public RuleCall getPlanificacionesPlanificacionParserRuleCall_9_0() { return cPlanificacionesPlanificacionParserRuleCall_9_0; }

		//horarios+=Horario*
		public Assignment getHorariosAssignment_10() { return cHorariosAssignment_10; }

		//Horario
		public RuleCall getHorariosHorarioParserRuleCall_10_0() { return cHorariosHorarioParserRuleCall_10_0; }
	}

	public class ProfesorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Profesor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProfesorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNombreAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNombreIDTerminalRuleCall_1_0 = (RuleCall)cNombreAssignment_1.eContents().get(0);
		
		//Profesor:
		//	"profesor" nombre+=ID;
		public ParserRule getRule() { return rule; }

		//"profesor" nombre+=ID
		public Group getGroup() { return cGroup; }

		//"profesor"
		public Keyword getProfesorKeyword_0() { return cProfesorKeyword_0; }

		//nombre+=ID
		public Assignment getNombreAssignment_1() { return cNombreAssignment_1; }

		//ID
		public RuleCall getNombreIDTerminalRuleCall_1_0() { return cNombreIDTerminalRuleCall_1_0; }
	}

	public class HoraElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Hora");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHoraKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cHoraAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cHoraINTTerminalRuleCall_1_0 = (RuleCall)cHoraAssignment_1.eContents().get(0);
		
		//Hora:
		//	"hora" hora+=INT;
		public ParserRule getRule() { return rule; }

		//"hora" hora+=INT
		public Group getGroup() { return cGroup; }

		//"hora"
		public Keyword getHoraKeyword_0() { return cHoraKeyword_0; }

		//hora+=INT
		public Assignment getHoraAssignment_1() { return cHoraAssignment_1; }

		//INT
		public RuleCall getHoraINTTerminalRuleCall_1_0() { return cHoraINTTerminalRuleCall_1_0; }
	}

	public class MateriaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Materia");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMateriaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNombreAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNombreIDTerminalRuleCall_1_0 = (RuleCall)cNombreAssignment_1.eContents().get(0);
		
		//Materia:
		//	"materia" nombre+=ID;
		public ParserRule getRule() { return rule; }

		//"materia" nombre+=ID
		public Group getGroup() { return cGroup; }

		//"materia"
		public Keyword getMateriaKeyword_0() { return cMateriaKeyword_0; }

		//nombre+=ID
		public Assignment getNombreAssignment_1() { return cNombreAssignment_1; }

		//ID
		public RuleCall getNombreIDTerminalRuleCall_1_0() { return cNombreIDTerminalRuleCall_1_0; }
	}

	public class AulaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Aula");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAulaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNombreAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNombreIDTerminalRuleCall_1_0 = (RuleCall)cNombreAssignment_1.eContents().get(0);
		
		//Aula:
		//	"aula" nombre+=ID;
		public ParserRule getRule() { return rule; }

		//"aula" nombre+=ID
		public Group getGroup() { return cGroup; }

		//"aula"
		public Keyword getAulaKeyword_0() { return cAulaKeyword_0; }

		//nombre+=ID
		public Assignment getNombreAssignment_1() { return cNombreAssignment_1; }

		//ID
		public RuleCall getNombreIDTerminalRuleCall_1_0() { return cNombreIDTerminalRuleCall_1_0; }
	}

	public class CargaHorariaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CargaHoraria");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCargaHorariaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTipoAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTipoIDTerminalRuleCall_1_0 = (RuleCall)cTipoAssignment_1.eContents().get(0);
		
		//CargaHoraria:
		//	"cargaHoraria" tipo+=ID;
		public ParserRule getRule() { return rule; }

		//"cargaHoraria" tipo+=ID
		public Group getGroup() { return cGroup; }

		//"cargaHoraria"
		public Keyword getCargaHorariaKeyword_0() { return cCargaHorariaKeyword_0; }

		//tipo+=ID
		public Assignment getTipoAssignment_1() { return cTipoAssignment_1; }

		//ID
		public RuleCall getTipoIDTerminalRuleCall_1_0() { return cTipoIDTerminalRuleCall_1_0; }
	}

	public class CargaHorariaDocenteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CargaHorariaDocente");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNombreAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNombreProfesorParserRuleCall_0_0 = (RuleCall)cNombreAssignment_0.eContents().get(0);
		private final Keyword cTieneKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTipoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTipoCargaHorariaParserRuleCall_2_0 = (RuleCall)cTipoAssignment_2.eContents().get(0);
		
		//CargaHorariaDocente:
		//	nombre=Profesor "tiene" tipo=CargaHoraria;
		public ParserRule getRule() { return rule; }

		//nombre=Profesor "tiene" tipo=CargaHoraria
		public Group getGroup() { return cGroup; }

		//nombre=Profesor
		public Assignment getNombreAssignment_0() { return cNombreAssignment_0; }

		//Profesor
		public RuleCall getNombreProfesorParserRuleCall_0_0() { return cNombreProfesorParserRuleCall_0_0; }

		//"tiene"
		public Keyword getTieneKeyword_1() { return cTieneKeyword_1; }

		//tipo=CargaHoraria
		public Assignment getTipoAssignment_2() { return cTipoAssignment_2; }

		//CargaHoraria
		public RuleCall getTipoCargaHorariaParserRuleCall_2_0() { return cTipoCargaHorariaParserRuleCall_2_0; }
	}

	public class HorarioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Horario");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDiaAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDiaDiaParserRuleCall_0_0 = (RuleCall)cDiaAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDesdeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDesdeHoraParserRuleCall_2_0 = (RuleCall)cDesdeAssignment_2.eContents().get(0);
		private final Keyword cAKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cHastaAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cHastaHoraParserRuleCall_4_0 = (RuleCall)cHastaAssignment_4.eContents().get(0);
		private final Keyword cHsSeDictaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cMateriaAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cMateriaMateriaParserRuleCall_6_0 = (RuleCall)cMateriaAssignment_6.eContents().get(0);
		private final Keyword cEnKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cAulaAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cAulaAulaParserRuleCall_8_0 = (RuleCall)cAulaAssignment_8.eContents().get(0);
		
		//Horario:
		//	dia=Dia ":" desde=Hora "a" hasta=Hora "hs se dicta" materia=Materia "en" aula=Aula;
		public ParserRule getRule() { return rule; }

		//dia=Dia ":" desde=Hora "a" hasta=Hora "hs se dicta" materia=Materia "en" aula=Aula
		public Group getGroup() { return cGroup; }

		//dia=Dia
		public Assignment getDiaAssignment_0() { return cDiaAssignment_0; }

		//Dia
		public RuleCall getDiaDiaParserRuleCall_0_0() { return cDiaDiaParserRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//desde=Hora
		public Assignment getDesdeAssignment_2() { return cDesdeAssignment_2; }

		//Hora
		public RuleCall getDesdeHoraParserRuleCall_2_0() { return cDesdeHoraParserRuleCall_2_0; }

		//"a"
		public Keyword getAKeyword_3() { return cAKeyword_3; }

		//hasta=Hora
		public Assignment getHastaAssignment_4() { return cHastaAssignment_4; }

		//Hora
		public RuleCall getHastaHoraParserRuleCall_4_0() { return cHastaHoraParserRuleCall_4_0; }

		//"hs se dicta"
		public Keyword getHsSeDictaKeyword_5() { return cHsSeDictaKeyword_5; }

		//materia=Materia
		public Assignment getMateriaAssignment_6() { return cMateriaAssignment_6; }

		//Materia
		public RuleCall getMateriaMateriaParserRuleCall_6_0() { return cMateriaMateriaParserRuleCall_6_0; }

		//"en"
		public Keyword getEnKeyword_7() { return cEnKeyword_7; }

		//aula=Aula
		public Assignment getAulaAssignment_8() { return cAulaAssignment_8; }

		//Aula
		public RuleCall getAulaAulaParserRuleCall_8_0() { return cAulaAulaParserRuleCall_8_0; }
	}

	public class SemestreElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Semestre");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAnhoAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cAnhoINTTerminalRuleCall_0_0 = (RuleCall)cAnhoAssignment_0.eContents().get(0);
		private final Keyword cSemestreKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNumeroAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNumeroINTTerminalRuleCall_2_0 = (RuleCall)cNumeroAssignment_2.eContents().get(0);
		
		//Semestre:
		//	anho=INT "semestre" numero=INT;
		public ParserRule getRule() { return rule; }

		//anho=INT "semestre" numero=INT
		public Group getGroup() { return cGroup; }

		//anho=INT
		public Assignment getAnhoAssignment_0() { return cAnhoAssignment_0; }

		//INT
		public RuleCall getAnhoINTTerminalRuleCall_0_0() { return cAnhoINTTerminalRuleCall_0_0; }

		//"semestre"
		public Keyword getSemestreKeyword_1() { return cSemestreKeyword_1; }

		//numero=INT
		public Assignment getNumeroAssignment_2() { return cNumeroAssignment_2; }

		//INT
		public RuleCall getNumeroINTTerminalRuleCall_2_0() { return cNumeroINTTerminalRuleCall_2_0; }
	}

	public class DiaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Dia");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDiaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cDiaAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDiaIDTerminalRuleCall_1_0 = (RuleCall)cDiaAssignment_1.eContents().get(0);
		
		//Dia:
		//	"dia" dia+=ID;
		public ParserRule getRule() { return rule; }

		//"dia" dia+=ID
		public Group getGroup() { return cGroup; }

		//"dia"
		public Keyword getDiaKeyword_0() { return cDiaKeyword_0; }

		//dia+=ID
		public Assignment getDiaAssignment_1() { return cDiaAssignment_1; }

		//ID
		public RuleCall getDiaIDTerminalRuleCall_1_0() { return cDiaIDTerminalRuleCall_1_0; }
	}

	public class HorariosElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Horarios");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHorariosKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cHorariosAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cHorariosHorarioParserRuleCall_1_0 = (RuleCall)cHorariosAssignment_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Horarios:
		//	"horarios {" horarios+=Horario+ "}";
		public ParserRule getRule() { return rule; }

		//"horarios {" horarios+=Horario+ "}"
		public Group getGroup() { return cGroup; }

		//"horarios {"
		public Keyword getHorariosKeyword_0() { return cHorariosKeyword_0; }

		//horarios+=Horario+
		public Assignment getHorariosAssignment_1() { return cHorariosAssignment_1; }

		//Horario
		public RuleCall getHorariosHorarioParserRuleCall_1_0() { return cHorariosHorarioParserRuleCall_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2() { return cRightCurlyBracketKeyword_2; }
	}

	public class PlanificacionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Planificacion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPlanificacionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSemestreAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSemestreSemestreParserRuleCall_1_0 = (RuleCall)cSemestreAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cADictarKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMateriasAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMateriasMateriaParserRuleCall_4_0 = (RuleCall)cMateriasAssignment_4.eContents().get(0);
		private final Assignment cHorariosAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cHorariosHorariosParserRuleCall_5_0 = (RuleCall)cHorariosAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Planificacion:
		//	"planificacion" semestre=Semestre "{" "a dictar:" materias+=Materia+ horarios=Horarios "}";
		public ParserRule getRule() { return rule; }

		//"planificacion" semestre=Semestre "{" "a dictar:" materias+=Materia+ horarios=Horarios "}"
		public Group getGroup() { return cGroup; }

		//"planificacion"
		public Keyword getPlanificacionKeyword_0() { return cPlanificacionKeyword_0; }

		//semestre=Semestre
		public Assignment getSemestreAssignment_1() { return cSemestreAssignment_1; }

		//Semestre
		public RuleCall getSemestreSemestreParserRuleCall_1_0() { return cSemestreSemestreParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"a dictar:"
		public Keyword getADictarKeyword_3() { return cADictarKeyword_3; }

		//materias+=Materia+
		public Assignment getMateriasAssignment_4() { return cMateriasAssignment_4; }

		//Materia
		public RuleCall getMateriasMateriaParserRuleCall_4_0() { return cMateriasMateriaParserRuleCall_4_0; }

		//horarios=Horarios
		public Assignment getHorariosAssignment_5() { return cHorariosAssignment_5; }

		//Horarios
		public RuleCall getHorariosHorariosParserRuleCall_5_0() { return cHorariosHorariosParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	
	
	private ModelElements pModel;
	private ProfesorElements pProfesor;
	private HoraElements pHora;
	private MateriaElements pMateria;
	private AulaElements pAula;
	private CargaHorariaElements pCargaHoraria;
	private CargaHorariaDocenteElements pCargaHorariaDocente;
	private HorarioElements pHorario;
	private SemestreElements pSemestre;
	private DiaElements pDia;
	private HorariosElements pHorarios;
	private PlanificacionElements pPlanificacion;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public PdmGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.unq.planificador.Pdm".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	profesors+=Profesor* horas+=Hora* materias+=Materia* aulas+=Aula* cargasHorarias+=CargaHoraria*
	//	cargasHorariasDocentes+=CargaHorariaDocente* horarios+=Horarios* dias+=Dia* semestre+=Semestre*
	//	planificaciones+=Planificacion* horarios+=Horario*;
	public ModelElements getModelAccess() {
		return (pModel != null) ? pModel : (pModel = new ModelElements());
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//Profesor:
	//	"profesor" nombre+=ID;
	public ProfesorElements getProfesorAccess() {
		return (pProfesor != null) ? pProfesor : (pProfesor = new ProfesorElements());
	}
	
	public ParserRule getProfesorRule() {
		return getProfesorAccess().getRule();
	}

	//Hora:
	//	"hora" hora+=INT;
	public HoraElements getHoraAccess() {
		return (pHora != null) ? pHora : (pHora = new HoraElements());
	}
	
	public ParserRule getHoraRule() {
		return getHoraAccess().getRule();
	}

	//Materia:
	//	"materia" nombre+=ID;
	public MateriaElements getMateriaAccess() {
		return (pMateria != null) ? pMateria : (pMateria = new MateriaElements());
	}
	
	public ParserRule getMateriaRule() {
		return getMateriaAccess().getRule();
	}

	//Aula:
	//	"aula" nombre+=ID;
	public AulaElements getAulaAccess() {
		return (pAula != null) ? pAula : (pAula = new AulaElements());
	}
	
	public ParserRule getAulaRule() {
		return getAulaAccess().getRule();
	}

	//CargaHoraria:
	//	"cargaHoraria" tipo+=ID;
	public CargaHorariaElements getCargaHorariaAccess() {
		return (pCargaHoraria != null) ? pCargaHoraria : (pCargaHoraria = new CargaHorariaElements());
	}
	
	public ParserRule getCargaHorariaRule() {
		return getCargaHorariaAccess().getRule();
	}

	//CargaHorariaDocente:
	//	nombre=Profesor "tiene" tipo=CargaHoraria;
	public CargaHorariaDocenteElements getCargaHorariaDocenteAccess() {
		return (pCargaHorariaDocente != null) ? pCargaHorariaDocente : (pCargaHorariaDocente = new CargaHorariaDocenteElements());
	}
	
	public ParserRule getCargaHorariaDocenteRule() {
		return getCargaHorariaDocenteAccess().getRule();
	}

	//Horario:
	//	dia=Dia ":" desde=Hora "a" hasta=Hora "hs se dicta" materia=Materia "en" aula=Aula;
	public HorarioElements getHorarioAccess() {
		return (pHorario != null) ? pHorario : (pHorario = new HorarioElements());
	}
	
	public ParserRule getHorarioRule() {
		return getHorarioAccess().getRule();
	}

	//Semestre:
	//	anho=INT "semestre" numero=INT;
	public SemestreElements getSemestreAccess() {
		return (pSemestre != null) ? pSemestre : (pSemestre = new SemestreElements());
	}
	
	public ParserRule getSemestreRule() {
		return getSemestreAccess().getRule();
	}

	//Dia:
	//	"dia" dia+=ID;
	public DiaElements getDiaAccess() {
		return (pDia != null) ? pDia : (pDia = new DiaElements());
	}
	
	public ParserRule getDiaRule() {
		return getDiaAccess().getRule();
	}

	//Horarios:
	//	"horarios {" horarios+=Horario+ "}";
	public HorariosElements getHorariosAccess() {
		return (pHorarios != null) ? pHorarios : (pHorarios = new HorariosElements());
	}
	
	public ParserRule getHorariosRule() {
		return getHorariosAccess().getRule();
	}

	//Planificacion:
	//	"planificacion" semestre=Semestre "{" "a dictar:" materias+=Materia+ horarios=Horarios "}";
	public PlanificacionElements getPlanificacionAccess() {
		return (pPlanificacion != null) ? pPlanificacion : (pPlanificacion = new PlanificacionElements());
	}
	
	public ParserRule getPlanificacionRule() {
		return getPlanificacionAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
