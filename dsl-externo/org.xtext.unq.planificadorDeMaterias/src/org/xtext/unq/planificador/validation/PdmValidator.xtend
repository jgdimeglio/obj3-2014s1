/*
 * generated by Xtext
 */
package org.xtext.unq.planificador.validation

import org.eclipse.xtext.validation.Check
import org.xtext.unq.planificador.planificadorDeMateriasDsl.Asignacion
import org.xtext.unq.planificador.planificadorDeMateriasDsl.Model
import org.xtext.unq.planificador.planificadorDeMateriasDsl.Planificacion
import org.xtext.unq.planificador.planificadorDeMateriasDsl.PlanificadorDeMateriasDslPackage
import org.xtext.unq.planificador.planificadorDeMateriasDsl.Profesor
import org.xtext.unq.planificador.planificadorDeMateriasDsl.Materia
import org.xtext.unq.planificador.planificadorDeMateriasDsl.Model
import org.xtext.unq.planificador.planificadorDeMateriasDsl.Aula
import org.xtext.unq.planificador.planificadorDeMateriasDsl.Recurso
import java.util.List


//import org.eclipse.xtext.validation.Check
/**
 * Custom validation rules. 
 *
 * see http://www.eclipse.org/Xtext/documentation.html#validation
 */
class PdmValidator extends AbstractPdmValidator {


//	@Check
//	def validateMateriasAsignadas(Planificacion p){
//		var exist = true;
//		for(Materia m : p.materias){
//			exist = exist && estaAsignado(m,p)
//		}
//		if(!exist){
//			error("Falta asignar una materia", p, PlanificadorDeMateriasDslPackage.Literals.PLANIFICACION__HORARIO)
//		}
//	}
//	
//	def estaAsignado(Materia m, Planificacion p) {
//		p.horario.horarios.exists[ h | (h.materia.name.equals(m.name))]
//	}
//	

	@Check
	def validateMateriasRepetidas(Model m){
		for(Materia materia : m.elementosPrimarios.filter(Materia)){
			estaRepetido(materia, m.elementosPrimarios.filter(Materia))
		}
	}
	
	def estaRepetido(Materia materia, Iterable<Materia> m){
		var count = 0
		var ret = false
		for(Materia mat : m){
			if(mat.name.equals(materia.name)){
				count = count + 1
			}
		}
		if(count >= 2){
			error("Materia repetida", materia, PlanificadorDeMateriasDslPackage.Literals.MATERIA__NAME)
		}
	}	
	
//	@Check
//	def validateTieneLosRecursosNecesarios(Planificacion p){
//		for(Horario h : p.horario.horarios){
//			if(h.materia.tieneRecursos){
//				if(!h.materia.verificarRecursos(h.aula)){
//					error("No tiene los recursos necesarios",p, PlanificadorDeMateriasDslPackage.Literals.PLANIFICACION__HORARIO)
//				}
//			}
//		}
//	}
//	
//	def verificarRecursos(Materia m, Aula a){
//		var exist = true
//		for(Recurso r : m.recursosMateria){
//			exist = exist && a.recursosAula.exists[rec | rec.name.equals(r.name)]
//		}
//		exist
//	}
//	
//	def tieneRecursos(Materia m){
//		m.recursosMateria.size > 0
//	}
//	
//	@Check
//	def validateMateriasAsignadas(Planificacion p){
//		var exist = true;
//		for(Materia m : p.materias){
//			exist = exist && estaAsignado(m,p)
//		}
//		if(!exist){
//			error("Falta asignar una materia", p, PlanificadorDeMateriasDslPackage.Literals.PLANIFICACION__HORARIO)
//		}
//	}
//	
//	def estaAsignado(Materia m, Planificacion p) {
//		p.horario.horarios.exists[ h | (h.materia.name.equals(m.name))]
//	}
//	

	@Check
	def validateDedicacion(Profesor p){
		p.materiasQueDicta(p.eContainer as Model)
		
	}
	
	def validarDedicacion(Profesor p, Planificacion planificacion, int materiasQueDicta){
		if ((p.dedicacion.eClass.name.equals("EXCLUSIVA")) && (materiasQueDicta < 2 || materiasQueDicta > 5)) {
			error('''Tiene «materiasQueDicta» y necesita de 2 hasta 5 materias''', planificacion,
			PlanificadorDeMateriasDslPackage.Literals.PLANIFICACION__ASIGNACIONES)
		}
		if ((p.dedicacion.eClass.name.equals("SEMI")) && (materiasQueDicta != 2)) {
			error('''Tiene «materiasQueDicta» y necesita de 2 materias''', planificacion,
				PlanificadorDeMateriasDslPackage.Literals.PLANIFICACION__ASIGNACIONES)
		}
		if (p.dedicacion.eClass.name.equals("SIMPLE") && (materiasQueDicta != 1)) {
			error('''Tiene «materiasQueDicta» y necesita de 1 materia''', planificacion,
				PlanificadorDeMateriasDslPackage.Literals.PLANIFICACION__ASIGNACIONES)
		}
	}
	
	def materiasQueDicta(Profesor p , Model model) {
		var planificaciones = model.planificacion
		var count = 0
		for (Planificacion planificacion : planificaciones) {
			for (Asignacion a : planificacion.asignaciones) {
				if (a.profesores.exists[profe|profe.name.equals(p.name)]) {
					count = count + 1
				}
			}
		
			p.validarDedicacion(planificacion, count)
		}
	
	}
//	@Check
//	def validateMateriasRepetidas(Planificacion m){
//		for(Materia materia : m.materias){
//			if(estaRepetido(materia, m.materias)){
//				error("Materias repetidas", m, PlanificadorDeMateriasDslPackage.Literals.PLANIFICACION__MATERIAS)
//			} 
//		}
//	}
//	
//	@Check
//	def validateDayNotRepeated(Planificacion p) {
//		if (p.tieneMateriasRepetidas)
//			error("Tiene materias repetidas", p, PlanificadorDeMateriasDslPackage.Literals.PLANIFICACION__MATERIAS)
//	}
//	
//	def tieneMateriasRepetidas(Planificacion p) {
//		p.materias.toSet.size < p.materias.size
//	}
//
//	@Check
//	def validateDayNotRepeateasd(Horario h) {
//		val horarios = h.eContainer as Horarios
//	}
}
