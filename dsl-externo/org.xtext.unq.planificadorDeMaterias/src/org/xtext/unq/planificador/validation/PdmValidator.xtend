/*
 * generated by Xtext
 */
package org.xtext.unq.planificador.validation

import org.eclipse.xtext.validation.Check
import org.xtext.unq.planificador.planificadorDeMateriasDsl.Asignacion
import org.xtext.unq.planificador.planificadorDeMateriasDsl.Model
import org.xtext.unq.planificador.planificadorDeMateriasDsl.Planificacion
import org.xtext.unq.planificador.planificadorDeMateriasDsl.PlanificadorDeMateriasDslPackage
import org.xtext.unq.planificador.planificadorDeMateriasDsl.Profesor

//import org.eclipse.xtext.validation.Check
/**
 * Custom validation rules. 
 *
 * see http://www.eclipse.org/Xtext/documentation.html#validation
 */
class PdmValidator extends AbstractPdmValidator {

	//  public static val INVALID_NAME = 'invalidName'
	//
	//	@Check
	//	def checkGreetingStartsWithCapital(Greeting greeting) {
	//		if (!Character.isUpperCase(greeting.name.charAt(0))) {
	//			warning('Name should start with a capital', 
	//					MyDslPackage.Literals.GREETING__NAME,
	//					INVALID_NAME)
	//		}
	//	}
	//}
//	@Check
//	def validateMateriasAsignadas(Planificacion p){
//		var exist = true;
//		for(Materia m : p.materias){
//			exist = exist && estaAsignado(m,p)
//		}
//		if(!exist){
//			error("Falta asignar una materia", p, PlanificadorDeMateriasDslPackage.Literals.PLANIFICACION__HORARIO)
//		}
//	}
//	
//	def estaAsignado(Materia m, Planificacion p) {
//		p.horario.horarios.exists[ h | (h.materia.name.equals(m.name))]
//	}
//	
	@Check
	def validateDedicacion(Profesor p){
		p.materiasQueDicta(p.eContainer as Model)
	}
	
	def validarDedicacion(Profesor p, Planificacion planificacion, int materiasQueDicta){
		if ((p.dedicacion.eClass.name.equals("EXCLUSIVA")) && (materiasQueDicta < 2 || materiasQueDicta > 5)) {
			error('''Tiene «materiasQueDicta» y necesita de 2 hasta 5 materias''', planificacion,
			PlanificadorDeMateriasDslPackage.Literals.PLANIFICACION__ASIGNACIONES)
		}
		if ((p.dedicacion.eClass.name.equals("SEMI")) && (materiasQueDicta != 2)) {
			error('''Tiene «materiasQueDicta» y necesita de 2 materias''', planificacion,
				PlanificadorDeMateriasDslPackage.Literals.PLANIFICACION__ASIGNACIONES)
		}
		if (p.dedicacion.eClass.name.equals("SIMPLE") && (materiasQueDicta != 1)) {
			error('''Tiene «materiasQueDicta» y necesita de 1 materia''', planificacion,
				PlanificadorDeMateriasDslPackage.Literals.PLANIFICACION__ASIGNACIONES)
		}
	}
	
	def materiasQueDicta(Profesor p , Model model) {
		var planificaciones = model.planificacion
		var count = 0
		for (Planificacion planificacion : planificaciones) {
			for (Asignacion a : planificacion.asignaciones) {
				if (a.profesores.exists[profe|profe.name.equals(p.name)]) {
					count = count + 1
				}
			}
			p.validarDedicacion(planificacion, count)
		}
	}
	
//	@Check
//	def validateDayNotRepeated(Planificacion p) {
//		if (p.tieneMateriasRepetidas)
//			error("Tiene materias repetidas", p, PlanificadorDeMateriasDslPackage.Literals.PLANIFICACION__MATERIAS)
//	}
//	
//	def tieneMateriasRepetidas(Planificacion p) {
//		p.materias.toSet.size < p.materias.size
//	}
//
//	@Check
//	def validateDayNotRepeateasd(Horario h) {
//		val horarios = h.eContainer as Horarios
//	}
}
